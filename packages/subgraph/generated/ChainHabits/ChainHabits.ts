// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChallengeCompleted extends ethereum.Event {
  get params(): ChallengeCompleted__Params {
    return new ChallengeCompleted__Params(this);
  }
}

export class ChallengeCompleted__Params {
  _event: ChallengeCompleted;

  constructor(event: ChallengeCompleted) {
    this._event = event;
  }

  get challengeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get status(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }
}

export class FundsWithdrawn extends ethereum.Event {
  get params(): FundsWithdrawn__Params {
    return new FundsWithdrawn__Params(this);
  }
}

export class FundsWithdrawn__Params {
  _event: FundsWithdrawn;

  constructor(event: FundsWithdrawn) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class NewChallengeCreated extends ethereum.Event {
  get params(): NewChallengeCreated__Params {
    return new NewChallengeCreated__Params(this);
  }
}

export class NewChallengeCreated__Params {
  _event: NewChallengeCreated;

  constructor(event: NewChallengeCreated) {
    this._event = event;
  }

  get challengeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get Objective(): string {
    return this._event.parameters[2].value.toString();
  }

  get startingMiles(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get NumberofWeeks(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get defaultAddress(): Address {
    return this._event.parameters[5].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }
}

export class NewUserRegistered extends ethereum.Event {
  get params(): NewUserRegistered__Params {
    return new NewUserRegistered__Params(this);
  }
}

export class NewUserRegistered__Params {
  _event: NewUserRegistered;

  constructor(event: NewUserRegistered) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class intervalReviewCompleted extends ethereum.Event {
  get params(): intervalReviewCompleted__Params {
    return new intervalReviewCompleted__Params(this);
  }
}

export class intervalReviewCompleted__Params {
  _event: intervalReviewCompleted;

  constructor(event: intervalReviewCompleted) {
    this._event = event;
  }

  get challengeId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get success(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class ChainHabits__getChallengeDetailsResultValue0Struct extends ethereum.Tuple {
  get targetMiles(): i32 {
    return this[0].toI32();
  }

  get NoOfWeeks(): i32 {
    return this[1].toI32();
  }

  get failedWeeks(): i32 {
    return this[2].toI32();
  }

  get isLive(): boolean {
    return this[3].toBoolean();
  }

  get challengeStartDate(): BigInt {
    return this[4].toBigInt();
  }

  get defaultAddress(): Address {
    return this[5].toAddress();
  }
}

export class ChainHabits__getUserDetailsResultValue0Struct extends ethereum.Tuple {
  get currentStaked(): BigInt {
    return this[0].toBigInt();
  }

  get userID(): BigInt {
    return this[1].toBigInt();
  }

  get refreshToken(): string {
    return this[2].toString();
  }
}

export class ChainHabits extends ethereum.SmartContract {
  static bind(address: Address): ChainHabits {
    return new ChainHabits("ChainHabits", address);
  }

  admin(): Address {
    let result = super.call("admin", "admin():(address)", []);

    return result[0].toAddress();
  }

  try_admin(): ethereum.CallResult<Address> {
    let result = super.tryCall("admin", "admin():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allUsers(param0: BigInt): Address {
    let result = super.call("allUsers", "allUsers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_allUsers(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("allUsers", "allUsers(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllUserDetails(): Array<Address> {
    let result = super.call(
      "getAllUserDetails",
      "getAllUserDetails():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAllUserDetails(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAllUserDetails",
      "getAllUserDetails():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  getChallengeDetails(
    _challengeId: BigInt
  ): ChainHabits__getChallengeDetailsResultValue0Struct {
    let result = super.call(
      "getChallengeDetails",
      "getChallengeDetails(uint256):((uint8,uint8,uint8,bool,uint48,address))",
      [ethereum.Value.fromUnsignedBigInt(_challengeId)]
    );

    return changetype<ChainHabits__getChallengeDetailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getChallengeDetails(
    _challengeId: BigInt
  ): ethereum.CallResult<ChainHabits__getChallengeDetailsResultValue0Struct> {
    let result = super.tryCall(
      "getChallengeDetails",
      "getChallengeDetails(uint256):((uint8,uint8,uint8,bool,uint48,address))",
      [ethereum.Value.fromUnsignedBigInt(_challengeId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ChainHabits__getChallengeDetailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getChallengeId(_userAddress: Address): BigInt {
    let result = super.call(
      "getChallengeId",
      "getChallengeId(address):(uint256)",
      [ethereum.Value.fromAddress(_userAddress)]
    );

    return result[0].toBigInt();
  }

  try_getChallengeId(_userAddress: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getChallengeId",
      "getChallengeId(address):(uint256)",
      [ethereum.Value.fromAddress(_userAddress)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUserDetails(
    _user: Address
  ): ChainHabits__getUserDetailsResultValue0Struct {
    let result = super.call(
      "getUserDetails",
      "getUserDetails(address):((uint48,uint256,string))",
      [ethereum.Value.fromAddress(_user)]
    );

    return changetype<ChainHabits__getUserDetailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getUserDetails(
    _user: Address
  ): ethereum.CallResult<ChainHabits__getUserDetailsResultValue0Struct> {
    let result = super.tryCall(
      "getUserDetails",
      "getUserDetails(address):((uint48,uint256,string))",
      [ethereum.Value.fromAddress(_user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<ChainHabits__getUserDetailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  isUserRegisteredTable(param0: Address): boolean {
    let result = super.call(
      "isUserRegisteredTable",
      "isUserRegisteredTable(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_isUserRegisteredTable(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isUserRegisteredTable",
      "isUserRegisteredTable(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  userHasLiveChallenge(param0: Address): boolean {
    let result = super.call(
      "userHasLiveChallenge",
      "userHasLiveChallenge(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_userHasLiveChallenge(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "userHasLiveChallenge",
      "userHasLiveChallenge(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateNewChallengeCall extends ethereum.Call {
  get inputs(): CreateNewChallengeCall__Inputs {
    return new CreateNewChallengeCall__Inputs(this);
  }

  get outputs(): CreateNewChallengeCall__Outputs {
    return new CreateNewChallengeCall__Outputs(this);
  }
}

export class CreateNewChallengeCall__Inputs {
  _call: CreateNewChallengeCall;

  constructor(call: CreateNewChallengeCall) {
    this._call = call;
  }

  get _obj(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _targetMiles(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _weeks(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get _defaultAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateNewChallengeCall__Outputs {
  _call: CreateNewChallengeCall;

  constructor(call: CreateNewChallengeCall) {
    this._call = call;
  }

  get challengeId(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class HandleCompleteChallengeCall extends ethereum.Call {
  get inputs(): HandleCompleteChallengeCall__Inputs {
    return new HandleCompleteChallengeCall__Inputs(this);
  }

  get outputs(): HandleCompleteChallengeCall__Outputs {
    return new HandleCompleteChallengeCall__Outputs(this);
  }
}

export class HandleCompleteChallengeCall__Inputs {
  _call: HandleCompleteChallengeCall;

  constructor(call: HandleCompleteChallengeCall) {
    this._call = call;
  }

  get challengeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get stakeForfeited(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get userAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class HandleCompleteChallengeCall__Outputs {
  _call: HandleCompleteChallengeCall;

  constructor(call: HandleCompleteChallengeCall) {
    this._call = call;
  }
}

export class HandleIntervalReviewCall extends ethereum.Call {
  get inputs(): HandleIntervalReviewCall__Inputs {
    return new HandleIntervalReviewCall__Inputs(this);
  }

  get outputs(): HandleIntervalReviewCall__Outputs {
    return new HandleIntervalReviewCall__Outputs(this);
  }
}

export class HandleIntervalReviewCall__Inputs {
  _call: HandleIntervalReviewCall;

  constructor(call: HandleIntervalReviewCall) {
    this._call = call;
  }

  get _challengeId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get failed(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class HandleIntervalReviewCall__Outputs {
  _call: HandleIntervalReviewCall;

  constructor(call: HandleIntervalReviewCall) {
    this._call = call;
  }
}

export class RegisterNewUserCall extends ethereum.Call {
  get inputs(): RegisterNewUserCall__Inputs {
    return new RegisterNewUserCall__Inputs(this);
  }

  get outputs(): RegisterNewUserCall__Outputs {
    return new RegisterNewUserCall__Outputs(this);
  }
}

export class RegisterNewUserCall__Inputs {
  _call: RegisterNewUserCall;

  constructor(call: RegisterNewUserCall) {
    this._call = call;
  }

  get userID(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _refreshToken(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class RegisterNewUserCall__Outputs {
  _call: RegisterNewUserCall;

  constructor(call: RegisterNewUserCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateRefreshTokenCall extends ethereum.Call {
  get inputs(): UpdateRefreshTokenCall__Inputs {
    return new UpdateRefreshTokenCall__Inputs(this);
  }

  get outputs(): UpdateRefreshTokenCall__Outputs {
    return new UpdateRefreshTokenCall__Outputs(this);
  }
}

export class UpdateRefreshTokenCall__Inputs {
  _call: UpdateRefreshTokenCall;

  constructor(call: UpdateRefreshTokenCall) {
    this._call = call;
  }

  get _user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _refreshToken(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateRefreshTokenCall__Outputs {
  _call: UpdateRefreshTokenCall;

  constructor(call: UpdateRefreshTokenCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
