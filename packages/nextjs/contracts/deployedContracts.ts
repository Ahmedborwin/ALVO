/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  1337: {
    APIConsumer: {
      address: "0x7EEdFb37B08696eB46CB229691444180cdA0c466",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_donId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "_response",
              type: "bytes",
            },
          ],
          name: "ResponseReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestID",
              type: "bytes32",
            },
          ],
          name: "_RequestSent",
          type: "event",
        },
        {
          inputs: [],
          name: "StravaCall",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_router",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_bytes32",
              type: "bytes32",
            },
          ],
          name: "bytes32ToString",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "callbackGasLimit",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "contract_Admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "donId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_stravaCall",
              type: "string",
            },
          ],
          name: "populateStravaCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_subId",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "_callbackGasLimit",
              type: "uint32",
            },
          ],
          name: "populateSubIdANDGasLimit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastError",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastResponse",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string[]",
              name: "args",
              type: "string[]",
            },
          ],
          name: "sendRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAdmin",
              type: "address",
            },
          ],
          name: "setContractAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "newDonId",
              type: "bytes32",
            },
          ],
          name: "setDonId",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment: "@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
    },
    ChainHabits: {
      address: "0xe6695Eb4aF334688BB008b90147338B5886cB970",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "Caller",
              type: "address",
            },
          ],
          name: "CHAINHABITS__CallerNotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserNotYetRegistered",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "Objective",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "startingMiles",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "NumberofWeeks",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "competitionDeadline",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "currentIntervalEpoch",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "nextIntervalEpoch",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "address",
              name: "defaultAddress",
              type: "address",
            },
          ],
          name: "NewChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "NewUserRegistered",
          type: "event",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_obj",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_targetMiles",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_weeks",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_defaultAddress",
              type: "address",
            },
          ],
          name: "createNewChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUserDetails",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getChallengeDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "objective",
                  type: "string",
                },
                {
                  internalType: "uint8",
                  name: "targetMiles",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "NoOfWeeks",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "failedWeeks",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isLive",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "competitionDeadline",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "currentIntervalEpoch",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "nextIntervalEpoch",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "defaultAddress",
                  type: "address",
                },
              ],
              internalType: "struct ChainHabits.ChallengeDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getChallengeId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "challengeTally",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "SuccessfulChallenges",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currenStaked",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalDonated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userID",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "refreshToken",
                  type: "string",
                },
              ],
              internalType: "struct ChainHabits.UserDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amountToDefault",
              type: "uint256",
            },
          ],
          name: "handleCompleteChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "failed",
              type: "bool",
            },
            {
              internalType: "uint48",
              name: "currentIntervalEpoch",
              type: "uint48",
            },
            {
              internalType: "uint48",
              name: "nextIntervalEpoch",
              type: "uint48",
            },
          ],
          name: "handleIntervalReview",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isUserRegisteredTable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "userID",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "registerNewUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "updateRefreshToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userHasLiveChallenge",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
  31337: {
    ChainHabits: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "CHAINHABITS__ChallengeStillActive",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__InsufficientFunds",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserNotYetRegistered",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "uint8",
              name: "stakeForfeited",
              type: "uint8",
            },
          ],
          name: "ChallengeCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FundsWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "string",
              name: "Objective",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "startingMiles",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "NumberofWeeks",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "challengeStartDate",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "address",
              name: "defaultAddress",
              type: "address",
            },
          ],
          name: "NewChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "NewUserRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          name: "intervalReviewCompleted",
          type: "event",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_obj",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_targetMiles",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_weeks",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_defaultAddress",
              type: "address",
            },
          ],
          name: "createNewChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUserDetails",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getChallengeDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "targetMiles",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "NoOfWeeks",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "failedWeeks",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isLive",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "challengeStartDate",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "defaultAddress",
                  type: "address",
                },
              ],
              internalType: "struct ChainHabits.ChallengeDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getChallengeId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint48",
                  name: "currentStaked",
                  type: "uint48",
                },
                {
                  internalType: "uint256",
                  name: "userID",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "refreshToken",
                  type: "string",
                },
              ],
              internalType: "struct ChainHabits.UserDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "stakeForfeited",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "handleCompleteChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "failed",
              type: "bool",
            },
          ],
          name: "handleIntervalReview",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isUserRegisteredTable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "userID",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "registerNewUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "updateRefreshToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userHasLiveChallenge",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
  84532: {
    APIConsumer: {
      address: "0xE473e7c11eDf5fd9c5617Df24785DcACBcDE29Ca",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "router",
              type: "address",
            },
            {
              internalType: "bytes32",
              name: "_donId",
              type: "bytes32",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "EmptyArgs",
          type: "error",
        },
        {
          inputs: [],
          name: "EmptySource",
          type: "error",
        },
        {
          inputs: [],
          name: "NoInlineSecrets",
          type: "error",
        },
        {
          inputs: [],
          name: "OnlyRouterCanFulfill",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferRequested",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestFulfilled",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "id",
              type: "bytes32",
            },
          ],
          name: "RequestSent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "_requestId",
              type: "bytes32",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "_response",
              type: "bytes",
            },
          ],
          name: "ResponseReceived",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "bytes32",
              name: "requestID",
              type: "bytes32",
            },
          ],
          name: "_RequestSent",
          type: "event",
        },
        {
          inputs: [],
          name: "StravaCall",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "_router",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "acceptOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "_bytes32",
              type: "bytes32",
            },
          ],
          name: "bytes32ToString",
          outputs: [
            {
              internalType: "string",
              name: "",
              type: "string",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
        {
          inputs: [],
          name: "callbackGasLimit",
          outputs: [
            {
              internalType: "uint32",
              name: "",
              type: "uint32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "contract_Admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "donId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "requestId",
              type: "bytes32",
            },
            {
              internalType: "bytes",
              name: "response",
              type: "bytes",
            },
            {
              internalType: "bytes",
              name: "err",
              type: "bytes",
            },
          ],
          name: "handleOracleFulfillment",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_stravaCall",
              type: "string",
            },
          ],
          name: "populateStravaCall",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint64",
              name: "_subId",
              type: "uint64",
            },
            {
              internalType: "uint32",
              name: "_callbackGasLimit",
              type: "uint32",
            },
          ],
          name: "populateSubIdANDGasLimit",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastError",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastRequestId",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "s_lastResponse",
          outputs: [
            {
              internalType: "bytes",
              name: "",
              type: "bytes",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string[]",
              name: "args",
              type: "string[]",
            },
          ],
          name: "sendRequest",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_newAdmin",
              type: "address",
            },
          ],
          name: "setContractAdmin",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes32",
              name: "newDonId",
              type: "bytes32",
            },
          ],
          name: "setDonId",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "subscriptionId",
          outputs: [
            {
              internalType: "uint64",
              name: "",
              type: "uint64",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "to",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        handleOracleFulfillment: "@chainlink/contracts/src/v0.8/functions/v1_0_0/FunctionsClient.sol",
        acceptOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        owner: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
        transferOwnership: "@chainlink/contracts/src/v0.8/shared/access/ConfirmedOwner.sol",
      },
    },
    ChainHabits: {
      address: "0xD83E502fb420494A130d934B0586A94Ee2C10471",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "CHAINHABITS__ChallengeStillActive",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__InsufficientFunds",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserNotYetRegistered",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "stakeForfeited",
              type: "uint8",
            },
          ],
          name: "ChallengeCompleted",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "FundsWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: true,
              internalType: "string",
              name: "Objective",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "startingMiles",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "NumberofWeeks",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "challengeStartDate",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "address",
              name: "defaultAddress",
              type: "address",
            },
          ],
          name: "NewChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "NewUserRegistered",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "previousOwner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "OwnershipTransferred",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: true,
              internalType: "address",
              name: "user",
              type: "address",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
          ],
          name: "intervalReviewCompleted",
          type: "event",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_obj",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_targetMiles",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_weeks",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_defaultAddress",
              type: "address",
            },
          ],
          name: "createNewChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUserDetails",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getChallengeDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint8",
                  name: "targetMiles",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "NoOfWeeks",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "failedWeeks",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isLive",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "challengeStartDate",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "defaultAddress",
                  type: "address",
                },
              ],
              internalType: "struct ChainHabits.ChallengeDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getChallengeId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint48",
                  name: "currentStaked",
                  type: "uint48",
                },
                {
                  internalType: "uint256",
                  name: "userID",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "refreshToken",
                  type: "string",
                },
              ],
              internalType: "struct ChainHabits.UserDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              internalType: "uint8",
              name: "stakeForfeited",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "userAddress",
              type: "address",
            },
          ],
          name: "handleCompleteChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "failed",
              type: "bool",
            },
          ],
          name: "handleIntervalReview",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isUserRegisteredTable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "userID",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "registerNewUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "renounceOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "newOwner",
              type: "address",
            },
          ],
          name: "transferOwnership",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "updateRefreshToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userHasLiveChallenge",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {
        owner: "@openzeppelin/contracts/access/Ownable.sol",
        renounceOwnership: "@openzeppelin/contracts/access/Ownable.sol",
        transferOwnership: "@openzeppelin/contracts/access/Ownable.sol",
      },
    },
  },
  11155111: {
    ChainHabits: {
      address: "0x73F82105E6FF0841010331aE1109c87b6A3Ea5dc",
      abi: [
        {
          inputs: [],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "Caller",
              type: "address",
            },
          ],
          name: "CHAINHABITS__CallerNotAdmin",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserAlreadyRegistered",
          type: "error",
        },
        {
          inputs: [],
          name: "CHAINHABITS__UserNotYetRegistered",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "string",
              name: "Objective",
              type: "string",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "startingMiles",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint8",
              name: "NumberofWeeks",
              type: "uint8",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "competitionDeadline",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "currentIntervalEpoch",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "uint48",
              name: "nextIntervalEpoch",
              type: "uint48",
            },
            {
              indexed: false,
              internalType: "address",
              name: "defaultAddress",
              type: "address",
            },
          ],
          name: "NewChallengeCreated",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: false,
              internalType: "address",
              name: "user",
              type: "address",
            },
          ],
          name: "NewUserRegistered",
          type: "event",
        },
        {
          inputs: [],
          name: "admin",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "allUsers",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "string",
              name: "_obj",
              type: "string",
            },
            {
              internalType: "uint8",
              name: "_targetMiles",
              type: "uint8",
            },
            {
              internalType: "uint8",
              name: "_weeks",
              type: "uint8",
            },
            {
              internalType: "address",
              name: "_defaultAddress",
              type: "address",
            },
          ],
          name: "createNewChallenge",
          outputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
          ],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [],
          name: "getAllUserDetails",
          outputs: [
            {
              internalType: "address[]",
              name: "",
              type: "address[]",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
          ],
          name: "getChallengeDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "string",
                  name: "objective",
                  type: "string",
                },
                {
                  internalType: "uint8",
                  name: "targetMiles",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "NoOfWeeks",
                  type: "uint8",
                },
                {
                  internalType: "uint8",
                  name: "failedWeeks",
                  type: "uint8",
                },
                {
                  internalType: "bool",
                  name: "isLive",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "competitionDeadline",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "currentIntervalEpoch",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "nextIntervalEpoch",
                  type: "uint48",
                },
                {
                  internalType: "address",
                  name: "defaultAddress",
                  type: "address",
                },
              ],
              internalType: "struct ChainHabits.ChallengeDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_userAddress",
              type: "address",
            },
          ],
          name: "getChallengeId",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
          ],
          name: "getUserDetails",
          outputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "challengeTally",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "SuccessfulChallenges",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "currenStaked",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "totalDonated",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "userID",
                  type: "uint256",
                },
                {
                  internalType: "string",
                  name: "refreshToken",
                  type: "string",
                },
              ],
              internalType: "struct ChainHabits.UserDetails",
              name: "",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "challengeId",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "_amountToDefault",
              type: "uint256",
            },
          ],
          name: "handleCompleteChallenge",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "_challengeId",
              type: "uint256",
            },
            {
              internalType: "bool",
              name: "failed",
              type: "bool",
            },
            {
              internalType: "uint48",
              name: "currentIntervalEpoch",
              type: "uint48",
            },
            {
              internalType: "uint48",
              name: "nextIntervalEpoch",
              type: "uint48",
            },
          ],
          name: "handleIntervalReview",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "isUserRegisteredTable",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "userID",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "registerNewUser",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "test",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "testVar",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "testVar4",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "_user",
              type: "address",
            },
            {
              internalType: "string",
              name: "_refreshToken",
              type: "string",
            },
          ],
          name: "updateRefreshToken",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "userHasLiveChallenge",
          outputs: [
            {
              internalType: "bool",
              name: "",
              type: "bool",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "withdrawFunds",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
